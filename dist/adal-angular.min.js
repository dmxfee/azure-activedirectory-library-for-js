/*! adal-angular v1.0.9 2018-09-26 */
"use strict";"undefined"!=typeof module&&module.exports&&(module.exports.inject=function(e){return new AuthenticationContext(e)}),function(){if(angular){var e=angular.module("AdalAngular",[]);e.provider("adalAuthenticationService",function(){var s=null,l={isAuthenticated:!1,userName:"",loginError:"",profile:""},f=null,g=function(e){var n=s.getCachedToken(e);l.isAuthenticated=null!==n&&0<n.length;var r=s.getCachedUser()||{userName:""};l.userName=r.userName,l.profile=r.profile,l.loginError=s.getLoginError()};this.init=function(e,n){if(!e)throw new Error("You must set configOptions, when calling init");var r=window.location.hash,o=window.location.href;if(r&&(o=o.replace(r,"")),e.redirectUri=e.redirectUri||o,e.postLogoutRedirectUri=e.postLogoutRedirectUri||o,n&&n.interceptors&&n.interceptors.push("ProtectedResourceInterceptor"),e.isOffline&&"function"!=typeof e.isOffline)throw new Error("callback isOnline is not a function");f=e.isOffline,s=new AuthenticationContext(e),g(s.config.loginResource)},this.$get=["$rootScope","$window","$q","$location","$timeout","$injector",function(o,r,e,i,t,a){var c=function(e){s.info("Login event for:"+i.$$url),s.config&&s.config.localLoginUrl?i.path(s.config.localLoginUrl):(s._saveItem(s.CONSTANTS.STORAGE.START_PAGE,i.$$url),s.info("Start login at:"+window.location.href),o.$broadcast("adal:loginRedirect"),s.login(e))};function u(e,n){return n.requireADLogin?!1!==e.requireADLogin:!!e.requireADLogin}return o.$on("$routeChangeStart",function(e,n){n&&n.$$route&&u(n.$$route,s.config)&&(l.isAuthenticated||s._renewActive||(s.info("Route change event for:"+i.$$url),c("adal:route_change&unauthenticated&renew_inactive")))}),o.$on("$stateChangeStart",function(e,n,r,o,t){n&&u(n,s.config)&&(l.isAuthenticated||s._renewActive||(i.$$url=n.url,s._saveItem(s.CONSTANTS.STORAGE.START_PAGE_PARAMS,JSON.stringify(r)),s.info("State change event for:"+i.$$url),c("adal:state_change&unauthenticated&renew_inactive")))}),o.$on("$locationChangeStart",function(){var e=r.location.hash;if(s.isCallback(e)){var n=s.getRequestInfo(e);if(s.saveTokenFromHash(n),i.$$html5?r.location=r.location.origin+r.location.pathname:r.location.hash="",n.requestType!==s.REQUEST_TYPE.LOGIN&&(s.callback=r.parent.AuthenticationContext().callback,n.requestType===s.REQUEST_TYPE.RENEW_TOKEN&&(s.callback=r.parent.callBackMappedToRenewStates[n.stateResponse])),n.stateMatch)if("function"==typeof s.callback){if(n.requestType===s.REQUEST_TYPE.RENEW_TOKEN){if(n.parameters.access_token)return void s.callback(s._getItem(s.CONSTANTS.STORAGE.ERROR_DESCRIPTION),n.parameters.access_token);if(n.parameters.id_token)return void s.callback(s._getItem(s.CONSTANTS.STORAGE.ERROR_DESCRIPTION),n.parameters.id_token)}}else g(s.config.loginResource),l.userName?(t(function(){g(s.config.loginResource),o.userInfo=l;var e=s._getItem(s.CONSTANTS.STORAGE.START_PAGE);if(e){var n=s._getItem(s.CONSTANTS.STORAGE.START_PAGE_PARAMS);if(n){var r=JSON.parse(n);i.url(e).search(r)}else i.url(e)}},1),o.$broadcast("adal:loginSuccess",s.config.loginResource)):o.$broadcast("adal:loginFailure",s._getItem(s.CONSTANTS.STORAGE.ERROR_DESCRIPTION),s.config.loginResource);else o.$broadcast("adal:stateMismatch",s._getItem(s.CONSTANTS.STORAGE.ERROR_DESCRIPTION))}else{if(f&&f(a))return void s.warn("Location change event ignore due to app state offline.");g(s.config.loginResource),l.isAuthenticated||!l.userName||s._renewActive||(s._renewActive=!0,s.acquireToken(s.config.loginResource,function(e,n){s._renewActive=!1,e?o.$broadcast("adal:loginFailure","auto renew failure",s.config.loginResource):n&&(l.isAuthenticated=!0,o.$broadcast("adal:loginSuccess",s.config.loginResource))}))}t(function(){g(s.config.loginResource),o.userInfo=l},1)}),g(s.config.loginResource),o.userInfo=l,{config:s.config,login:function(e){s.login(e)},loginInProgress:function(){return s.loginInProgress()},logOut:function(){s.logOut()},getCachedToken:function(e){return s.getCachedToken(e)},userInfo:l,acquireToken:function(r){var o=e.defer(),t=r===s.config.loginResource;return s._renewActive=!!t||s._renewActive,s.acquireToken(r,function(e,n){s._renewActive=!t&&s._renewActive,e?(s.error("Error when acquiring token for resource: "+r,e),o.reject(e)):(t&&g(s.config.loginResource),o.resolve(n))}),o.promise},acquireTokenRedirect:function(e,n,r){s.acquireTokenRedirect(e,n,r)},getUser:function(){var r=e.defer();return s.getUser(function(e,n){e?(s.error("Error when getting user",e),r.reject(e)):r.resolve(n)}),r.promise},getResourceForEndpoint:function(e){return s.getResourceForEndpoint(e)},clearCache:function(){s.clearCache()},clearCacheForResource:function(e){s.clearCacheForResource(e)},info:function(e){s.info(e)},verbose:function(e){s.verbose(e)}}}]}),e.factory("ProtectedResourceInterceptor",["adalAuthenticationService","$q","$rootScope",function(t,i,r){return{request:function(n){if(n){n.headers=n.headers||{};var e=t.getResourceForEndpoint(n.url);if(null===e)return n;var r=t.getCachedToken(e);if(r)return t.info("Token is avaliable for this url "+n.url),n.headers.Authorization="Bearer "+r,n;if(t.loginInProgress())return t.info("login already start."),i.reject("login in progress, cancelling the request");var o=i.defer();return t.acquireToken(e).then(function(e){t.verbose("Token is avaliable"),n.headers.Authorization="Bearer "+e,o.resolve(n)},function(e){o.reject(e)}),o.promise}},responseError:function(e){if(t.info("Getting error in the response"),e){if(401===e.status){var n=t.getResourceForEndpoint(e.config.url);t.clearCacheForResource(n),r.$broadcast("adal:notAuthorized",e,n)}else r.$broadcast("adal:errorResponse",e);return i.reject(e)}}}}])}else console.error("Angular.JS is not included")}();