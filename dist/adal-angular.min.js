// @preserve Copyright (c) Microsoft Open Technologies, Inc.
/*! adal-angular v1.0.9 2017-02-09 */
"use strict";"undefined"!=typeof module&&module.exports&&(module.exports.inject=function(a){return new AuthenticationContext(a)}),function(){if(angular){var a=angular.module("AdalAngular",[]);a.provider("adalAuthenticationService",function(){var a=null,b={isAuthenticated:!1,userName:"",loginError:"",profile:""},c=null,d=function(c){var d=a.getCachedToken(c);b.isAuthenticated=null!==d&&d.length>0;var e=a.getCachedUser()||{userName:""};b.userName=e.userName,b.profile=e.profile,b.loginError=a.getLoginError()};this.init=function(b,e){if(!b)throw new Error("You must set configOptions, when calling init");var f=window.location.hash,g=window.location.href;if(f&&(g=g.replace(f,"")),b.redirectUri=b.redirectUri||g,b.postLogoutRedirectUri=b.postLogoutRedirectUri||g,e&&e.interceptors&&e.interceptors.push("ProtectedResourceInterceptor"),b.isOffline&&"function"!=typeof b.isOffline)throw new Error("callback isOnline is not a function");c=b.isOffline,a=new AuthenticationContext(b),d(a.config.loginResource)},this.$get=["$rootScope","$window","$q","$location","$timeout","$injector",function(e,f,g,h,i,j){function k(a,b){return b.requireADLogin?a.requireADLogin!==!1:!!a.requireADLogin}var l=function(){var g=f.location.hash;if(a.isCallback(g)){var k=a.getRequestInfo(g);if(a.saveTokenFromHash(k),h.$$html5?f.location=f.location.origin+f.location.pathname:f.location.hash="",k.requestType!==a.REQUEST_TYPE.LOGIN&&(a.callback=f.parent.AuthenticationContext().callback,k.requestType===a.REQUEST_TYPE.RENEW_TOKEN&&(a.callback=f.parent.callBackMappedToRenewStates[k.stateResponse])),k.stateMatch)if("function"==typeof a.callback){if(k.requestType===a.REQUEST_TYPE.RENEW_TOKEN){if(k.parameters.access_token)return void a.callback(a._getItem(a.CONSTANTS.STORAGE.ERROR_DESCRIPTION),k.parameters.access_token);if(k.parameters.id_token)return void a.callback(a._getItem(a.CONSTANTS.STORAGE.ERROR_DESCRIPTION),k.parameters.id_token)}}else d(a.config.loginResource),b.userName?(i(function(){d(a.config.loginResource),e.userInfo=b;var c=a._getItem(a.CONSTANTS.STORAGE.START_PAGE);if(c){var f=a._getItem(a.CONSTANTS.STORAGE.START_PAGE_PARAMS);if(f){var g=JSON.parse(f);h.url(c).search(g)}else h.url(c)}},1),e.$broadcast("adal:loginSuccess",a.config.loginResource)):e.$broadcast("adal:loginFailure",a._getItem(a.CONSTANTS.STORAGE.ERROR_DESCRIPTION),a.config.loginResource);else e.$broadcast("adal:stateMismatch",a._getItem(a.CONSTANTS.STORAGE.ERROR_DESCRIPTION))}else{if(c&&c(j))return void a.warn("Location change event ignore due to app state offline.");d(a.config.loginResource),b.isAuthenticated||!b.userName||a._renewActive||(a._renewActive=!0,a.acquireToken(a.config.loginResource,function(c,d){a._renewActive=!1,c?e.$broadcast("adal:loginFailure","auto renew failure",a.config.loginResource):d&&(b.isAuthenticated=!0,e.$broadcast("adal:loginSuccess",a.config.loginResource))}))}i(function(){d(a.config.loginResource),e.userInfo=b},1)},m=function(b){a.info("Login event for:"+h.$$url),a.config&&a.config.localLoginUrl?h.path(a.config.localLoginUrl):(a._saveItem(a.CONSTANTS.STORAGE.START_PAGE,h.$$url),a.info("Start login at:"+window.location.href),e.$broadcast("adal:loginRedirect"),a.login(b))},n=function(c,d){d&&d.$$route&&k(d.$$route,a.config)&&(b.isAuthenticated||a._renewActive||(a.info("Route change event for:"+h.$$url),m("adal:route_change&unauthenticated&renew_inactive")))},o=function(c,d,e,f,g){d&&k(d,a.config)&&(b.isAuthenticated||a._renewActive||(h.$$url=d.url,a._saveItem(a.CONSTANTS.STORAGE.START_PAGE_PARAMS,JSON.stringify(e)),a.info("State change event for:"+h.$$url),m("adal:state_change&unauthenticated&renew_inactive")))};return e.$on("$routeChangeStart",n),e.$on("$stateChangeStart",o),e.$on("$locationChangeStart",l),d(a.config.loginResource),e.userInfo=b,{config:a.config,login:function(b){a.login(b)},loginInProgress:function(){return a.loginInProgress()},logOut:function(){a.logOut()},getCachedToken:function(b){return a.getCachedToken(b)},userInfo:b,acquireToken:function(b){var c=g.defer(),e=b===a.config.loginResource;return a._renewActive=!!e||a._renewActive,a.acquireToken(b,function(f,g){a._renewActive=!e&&a._renewActive,f?(a.error("Error when acquiring token for resource: "+b,f),c.reject(f)):(e&&d(a.config.loginResource),c.resolve(g))}),c.promise},getUser:function(){var b=g.defer();return a.getUser(function(c,d){c?(a.error("Error when getting user",c),b.reject(c)):b.resolve(d)}),b.promise},getResourceForEndpoint:function(b){return a.getResourceForEndpoint(b)},clearCache:function(){a.clearCache()},clearCacheForResource:function(b){a.clearCacheForResource(b)},info:function(b){a.info(b)},verbose:function(b){a.verbose(b)}}}]}),a.factory("ProtectedResourceInterceptor",["adalAuthenticationService","$q","$rootScope",function(a,b,c){return{request:function(c){if(c){c.headers=c.headers||{};var d=a.getResourceForEndpoint(c.url);if(null===d)return c;var e=a.getCachedToken(d);if(e)return a.info("Token is avaliable for this url "+c.url),c.headers.Authorization="Bearer "+e,c;if(a.loginInProgress())return a.info("login already start."),b.reject("login in progress, cancelling the request");var f=b.defer();return a.acquireToken(d).then(function(b){a.verbose("Token is avaliable"),c.headers.Authorization="Bearer "+b,f.resolve(c)},function(a){f.reject(a)}),f.promise}},responseError:function(d){if(a.info("Getting error in the response"),d){if(401===d.status){var e=a.getResourceForEndpoint(d.config.url);a.clearCacheForResource(e),c.$broadcast("adal:notAuthorized",d,e)}else c.$broadcast("adal:errorResponse",d);return b.reject(d)}}}}])}else console.error("Angular.JS is not included")}();