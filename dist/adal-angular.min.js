/*! adal-angular v1.0.9 2018-10-13 */
"use strict";"undefined"!=typeof module&&module.exports&&(module.exports.inject=function(e){return new AuthenticationContext(e)}),function(){if(angular){var e=angular.module("AdalAngular",[]);e.provider("adalAuthenticationService",function(){var l=null,f={isAuthenticated:!1,userName:"",loginError:"",profile:""},g=null,d=function(e){var r=l.getCachedToken(e);f.isAuthenticated=null!==r&&0<r.length;var n=l.getCachedUser()||{userName:""};f.userName=n.userName,f.profile=n.profile,f.loginError=l.getLoginError()};this.init=function(e,r){if(!e)throw new Error("You must set configOptions, when calling init");var n=window.location.hash,o=window.location.href;if(n&&(o=o.replace(n,"")),e.redirectUri=e.redirectUri||o,e.postLogoutRedirectUri=e.postLogoutRedirectUri||o,r&&r.interceptors&&r.interceptors.push("ProtectedResourceInterceptor"),e.isOffline&&"function"!=typeof e.isOffline)throw new Error("callback isOnline is not a function");g=e.isOffline,l=new AuthenticationContext(e),d(l.config.loginResource)},this.$get=["$rootScope","$window","$q","$location","$timeout","$injector",function(i,n,a,c,o,t){var u=function(e){l.info("Login event for:"+c.$$url),l.config&&l.config.localLoginUrl?c.path(l.config.localLoginUrl):(l._saveItem(l.CONSTANTS.STORAGE.START_PAGE,c.$$url),l.info("Start login at:"+window.location.href),i.$broadcast("adal:loginRedirect"),l.login(e))};function s(e,r){return r.requireADLogin?!1!==e.requireADLogin:!!e.requireADLogin}return i.$on("$routeChangeStart",function(e,r){r&&r.$$route&&s(r.$$route,l.config)&&(f.isAuthenticated||l._renewActive||(l.info("Route change event for:"+c.$$url),u("adal:route_change&unauthenticated&renew_inactive")))}),i.$on("$stateChangeStart",function(e,r,n,o,t){r&&s(r,l.config)&&(f.isAuthenticated||l._renewActive||(c.$$url=r.url,l._saveItem(l.CONSTANTS.STORAGE.START_PAGE_PARAMS,JSON.stringify(n)),l.info("State change event for:"+c.$$url),u("adal:state_change&unauthenticated&renew_inactive")))}),i.$on("$locationChangeStart",function(){var e=n.location.hash;if(l.isCallback(e)){var r=l.getRequestInfo(e);if(l.saveTokenFromHash(r),c.$$html5?n.location=n.location.origin+n.location.pathname:n.location.hash="",r.requestType!==l.REQUEST_TYPE.LOGIN&&(l.callback=n.parent.AuthenticationContext().callback,r.requestType===l.REQUEST_TYPE.RENEW_TOKEN&&(l.callback=n.parent.callBackMappedToRenewStates[r.stateResponse])),r.stateMatch)if("function"==typeof l.callback){if(r.requestType===l.REQUEST_TYPE.RENEW_TOKEN){if(r.parameters.access_token)return void l.callback(l._getItem(l.CONSTANTS.STORAGE.ERROR_DESCRIPTION),r.parameters.access_token);if(r.parameters.id_token)return void l.callback(l._getItem(l.CONSTANTS.STORAGE.ERROR_DESCRIPTION),r.parameters.id_token)}}else d(l.config.loginResource),f.userName?(o(function(){d(l.config.loginResource),i.userInfo=f;var e=l._getItem(l.CONSTANTS.STORAGE.START_PAGE);if(e){var r=l._getItem(l.CONSTANTS.STORAGE.START_PAGE_PARAMS);if(r){var n=JSON.parse(r);c.url(e).search(n)}else c.url(e)}},1),i.$broadcast("adal:loginSuccess",l.config.loginResource)):i.$broadcast("adal:loginFailure",l._getItem(l.CONSTANTS.STORAGE.ERROR_DESCRIPTION),l.config.loginResource);else i.$broadcast("adal:stateMismatch",l._getItem(l.CONSTANTS.STORAGE.ERROR_DESCRIPTION))}else{if(g&&g(t))return void l.warn("Location change event ignore due to app state offline.");d(l.config.loginResource),f.isAuthenticated||!f.userName||l._renewActive||(l._renewActive=!0,l.acquireToken(l.config.loginResource,function(e,r){l._renewActive=!1,e?i.$broadcast("adal:loginFailure","auto renew failure",l.config.loginResource):r&&(f.isAuthenticated=!0,i.$broadcast("adal:loginSuccess",l.config.loginResource))}))}o(function(){d(l.config.loginResource),i.userInfo=f},1)}),d(l.config.loginResource),i.userInfo=f,{config:l.config,login:function(e){l.login(e)},loginInProgress:function(){return l.loginInProgress()},logOut:function(){l.logOut()},getCachedToken:function(e){return l.getCachedToken(e)},userInfo:f,acquireToken:function(n){var o=a.defer(),t=n===l.config.loginResource;return l._renewActive=!!t||l._renewActive,l.acquireToken(n,function(e,r){l._renewActive=!t&&l._renewActive,e?(l.error("Error when acquiring token for resource: "+n,e),o.reject(e)):(t&&d(l.config.loginResource),o.resolve(r))}),o.promise},acquireTokenRedirect:function(e,r,n){l.acquireTokenRedirect(e,r,n)},acquireTokenPopup:function(o,e,r){var t=a.defer();return l.acquireTokenPopup(o,e,r,function(e,r,n){n?(i.$broadcast("adal:acquireTokenFailure",e,n),l.error("Error when acquiring token for resource: "+o,n),t.reject(e+"|"+n)):(i.$broadcast("adal:acquireTokenSuccess",r),t.resolve(r))}),t.promise},getUser:function(){var n=a.defer();return l.getUser(function(e,r){e?(l.error("Error when getting user",e),n.reject(e)):n.resolve(r)}),n.promise},getResourceForEndpoint:function(e){return l.getResourceForEndpoint(e)},clearCache:function(){l.clearCache()},clearCacheForResource:function(e){l.clearCacheForResource(e)},info:function(e){l.info(e)},verbose:function(e){l.verbose(e)}}}]}),e.factory("ProtectedResourceInterceptor",["adalAuthenticationService","$q","$rootScope",function(t,i,n){return{request:function(r){if(r){r.headers=r.headers||{};var e=t.getResourceForEndpoint(r.url);if(null===e)return r;var n=t.getCachedToken(e);if(n)return t.info("Token is avaliable for this url "+r.url),r.headers.Authorization="Bearer "+n,r;if(t.loginInProgress())return t.info("login already start."),i.reject("login in progress, cancelling the request");var o=i.defer();return t.acquireToken(e).then(function(e){t.verbose("Token is avaliable"),r.headers.Authorization="Bearer "+e,o.resolve(r)},function(e){o.reject(e)}),o.promise}},responseError:function(e){if(t.info("Getting error in the response"),e){if(401===e.status){var r=t.getResourceForEndpoint(e.config.url);t.clearCacheForResource(r),n.$broadcast("adal:notAuthorized",e,r)}else n.$broadcast("adal:errorResponse",e);return i.reject(e)}}}}])}else console.error("Angular.JS is not included")}();